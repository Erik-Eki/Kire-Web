---
import Navigation from './Navigation.astro'
import Hamburger from './Hamburger.astro'
import LoginModal from '$components/login-svelte/LoginModal.svelte'
import Search from '$components/main/Search.svelte'

// supabase.auth.onAuthStateChange((event, session) => {
// 	//   if (event == 'SIGNED_IN') console.log('SIGNED_IN', session)
// 	//   if (event == 'SIGNED_OUT') console.log('SIGNED_OUT', session)
// 	//   if (event == 'TOKEN_REFRESHED') console.log('TOKEN_REFRESHED', session)

// 	console.log("AUTH CHANGE:", event, session)
// 	// if (session) {
// 	// 	user = session.user
// 	// 	if (session && session.user) {
// 	// 		console.log(session.user)
// 	// 	}
// 	// }

// })

// const isLoggedIn = !(user == null);
//const session = Astro.cookies.get('session_token')?.value;

// session={
//         (event) => {Astro.cookies.set('session_token', event.detail.sessionCookie)}
//     }
const sum = (a, b) => a + b
---

<p class="mb-2 mt-2 border border-t-white"></p>
<div class="kire-web">KIRE WEB</div>

<div>
	<input
		type="text"
		id="search-input"
		hx-get="/api/search"
		hx-vals='js:{"q": document.getElementById("search-input").value.length > 2 ? document.getElementById("search-input").value : null}'
		hx-trigger="keyup changed delay:500ms"
		hx-target="#search-result"
		placeholder="Search content..."
		class="border-violet-80 mb-2 mt-2 w-full rounded border-2 bg-transparent p-2 text-white"
	/>

	<div id="search-result"></div>
</div>

<LoginModal client:load />
<header class="main-header">
	<nav class="header-container">
		<Hamburger />
		<Navigation />
	</nav>
</header>

<script type="module">
	// I need to do this bullshit, as Astro handles client-side navigation.
	// When you navigate to a new page, Astro.js does a full page refresh, 
	// which can cause issues with client-side libraries like HTMX
	// I have to listen to navigation events and reinit HTMX
	window.dispatchEvent(new Event('astro-navigate'))
	window.addEventListener('astro-navigate', () => {
		htmx.process(document.body)
	})
	//htmx.process(document.body);
	// const script = document.createElement('script')
	// script.src = '/htmx.min.js'
	// script.onload = () => {
	// 	// Initialize HTMX here
	// 	htmx.process(document.body)
	// 	//htmx.init()
	// }
	// document.head.appendChild(script)
</script>

<style>
	.kire-web {
		font-family: Norse;
		font-size: 50px;
		letter-spacing: 4ch;
		text-align: center;
		margin-right: -4ch;
	}
</style>
