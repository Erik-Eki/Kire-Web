---
import Layout from '../../layouts/Layout.astro'
import { contentfulClient } from '../../lib/contentful'
import { documentToHtmlString } from '@contentful/rich-text-html-renderer'
import type { ContentPost, ContentComic } from '../../lib/contentful'

// import { marked } from 'marked';
// const response = await fetch('https://kirewebblob.blob.core.windows.net/kire-web-assets/mdx_test.mdx');
// const markdown = await response.text();
// const mdxContent = marked.parse(markdown);

let post;
const { slug } = Astro.params

console.log("#############", Astro.params, Astro.props)

// const page = pages.find((page) => page.slug === slug);
// if (!page) return Astro.redirect("/404");
// const { title, text } = page;

try {
	const data = await contentfulClient.getEntries<ContentPost>({
		content_type: 'contentPost',
		'fields.slug': slug
	})

  if (data.items.length !== 0) {
    const { title, date, content } = data.items[0].fields;
      post = {
        title,
        date: new Date(date).toLocaleDateString(),
        content: content,
    };
  }
  else {
    const data = await contentfulClient.getEntries<ContentComic>({
      content_type: 'contentComic',
      'fields.slug': slug
    })

    const { title, cloudinary, content } = data.items[0].fields;
      post = {
        title,
        content: content,
        cloudinary: cloudinary
    };

    console.log(post)
  }


  

} catch (error) {
	return Astro.redirect('/404')
}

// console.log(post.content?.content[0]?.data?.target)
// if (post.content?.content[0]?.data?.target?.fields?.file?.url) {
//   post.content = mdxContent
// }

// for (let i of Object.keys(post.content)) {
//   console.log(i)
// }

// console.log(JSON.stringify(post.content))
---


<Layout title={post?.title}>
    <h1>{post?.title}</h1>
    <time>{post?.date}</time>
    <article set:html={documentToHtmlString(post?.content)} />
    {post?.cloudinary &&
      post.cloudinary.map((i) => 
        <img class=" m-1" src={i.secure_url}></img>
      )
    }
    <!-- <article set:html={post.content.content[0].data.target.fields.file.url}></article> -->
    <!-- <article set:html={mdxContent}></article> -->
</Layout>