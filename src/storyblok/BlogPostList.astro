---
import { storyblokEditable } from '@storyblok/astro'
import { useStoryblokApi } from '@storyblok/astro'

let excess = false

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? "draft" : "published",
  content_type: 'blogPost',
  per_page: 4
})

if (data?.stories.length > 3) {
  data.stories.splice(3, 1)
  excess = true
}

const posts = data.stories.map(story => {
  return {
    title: story.content.title,
    created_at: story.first_published_at,
    edited_at: story.published_at,
    // created_at: new Date(story.first_published_at).toLocaleString("en-FI", {dateStyle: "full", timeStyle: "short"}),
    // edited_at: new Date(story.published_at).toLocaleString("en-FI", {dateStyle: "short", timeStyle: "short"}),
    description: story.content.description,
    //slug: story.full_slug,
    slug: story.name,
    headImage: story.content.headerImage?.url
  }
})


const { blok } = Astro.props
---

<!-- <div class="not-prose border-solid border-2 border-violet-800 rounded-lg p-2 bg-black bg-opacity-40"> -->
<ul {...storyblokEditable(blok)} class="post-list fancy-scrollbar flex flex-row gap-8 overflow-x-auto overflow-y-hidden pb-4 m-2">
  {posts.map(post => (
    <div class="post-box bg-zinc-900 border-2 border-zinc-700 rounded-lg pl-2 pr-2 pt-5 pb-12 h-55">
      <a 
      href={post.slug}
      style=`--bgURL: url(${post.headImage})`
      class="card-button card-background p-5 w-full h-full rounded-md"
      rel="prefetch-intent"
      >
        <li class=" flex flex-col h-full">
          {post.created_at !== post.edited_at && 
            <time class="text-sm text-end">
              (edited: {new Date(post.edited_at).toLocaleString("en-FI", {dateStyle: "short", timeStyle: "short"})})
            </time>
            }
          <time class="text-sm">
            {new Date(post.created_at).toLocaleString("en-FI", {dateStyle: "full", timeStyle: "short"})}
          </time>
          <p class=" text-3xl flex-grow w-4/5 line-clamp-2 max-h-20 ease-in-out duration-500 hover:max-h-80 hover:lg:line-clamp-none no-underline">{post.title}</p>
          <p class="text-base text-end">{post.description}</p>
        </li>
      </a>
  </div>
  ))}
  {excess &&
    <a href="/posts/" class="no-underline whitespace-nowrap self-center text-black w-max p-3 font-bold text-3xl rounded ease-out duration-200 hover:bg-white hover:text-black">View more</a>
  }
</ul>

<style>
  .post-box {
    /* width: 450px; */
    min-width: 450px;
    max-width: 450px
  }
  .card-button {
    /* height: 14vh; */
    /* min-height: 150px; */
    display: block;
    text-align: left;
    box-shadow: none;
    /* transition: 0.3s; */
    background: linear-gradient( rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8) ), var(--bgURL);
  }
  .card-button:hover {
      /* border: 2px solid white; */
      /* box-sizing: border-box; */

      box-shadow:inset 0px 0px 0px 3px white;
    }
  .card-background{
    background-repeat:no-repeat !important; 
    background-position:center !important;
    background-size: cover !important;
    /* background-attachment:fixed !important; */
  }
  /* .card-background{
    position: relative;
    z-index:1;
    overflow:hidden
  }
  .card-background:before{
      z-index:-1;
      position:absolute;
      left:0;
      top:0;
      content: url('path/to/image.ext');
      opacity:0.4;
  } */
</style>